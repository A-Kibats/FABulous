read_verilog simple.v

#synth_xilinx -top blinky

#begin:
    read_verilog -lib +/diko/cells_sim.v
    read_verilog -lib +/diko/cells_xtra.v
#    read_verilog -lib +/xilinx/cells_sim.v
#    read_verilog -lib +/xilinx/cells_xtra.v
#    read_verilog -lib +/xilinx/brams_bb.v
#    read_verilog -lib +/xilinx/drams_bb.v
    hierarchy -check -top blinky

#flatten:     (only if -flatten)
    proc
    flatten

#coarse:
    synth -noalumacc -run coarse 

#bram:
#    memory_bram -rules +/xilinx/brams.txt
#    techmap -map +/xilinx/brams_map.v
#
#dram:
#    memory_bram -rules +/xilinx/drams.txt
#    techmap -map +/xilinx/drams_map.v

fine:
    opt -fast -full
    memory_map
    dffsr2dff
#    dff2dffe
    opt -full
    techmap -map +/techmap.v  -map +/diko/dsp_map.v #-map +/diko/arith_map.v
#    techmap -map +/diko/dsp_map.v
    opt -fast

map_luts:
    #abc -luts 2:2,3,4 #2:2,3,6:5 #,10,20 [-dff]
    abc -luts 4:4 #2:2,3,6:5 #,10,20 [-dff]
    clean

map_cells:
    techmap -map +/diko/cells_map.v
#    techmap -map +/xilinx/cells_map.v
    dffinit -ff FDRE Q INIT -ff FDCE Q INIT -ff FDPE Q INIT
    clean

check:
    hierarchy -check
    stat
    check -noinit

#edif:     (only if -edif)
#    write_edif <file-name>
#iopadmap -bits -inpad IBUF O:PAD -outpad OBUF I:PAD -tinoutpad IOBUF ENA:O:I:PAD bidirtest
iopadmap -inpad IBUF O -outpad OBUF I -widthparam bufwidth #-bits 
#iopadmap -inoutpad IOBUF I:O 

show
write_json simple.json
